{
    "name": "kind",
    "description": "A Pulumi package for creating and managing kind cloud resources.",
    "keywords": [
        "pulumi",
        "kind",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`kind` Terraform Provider](https://github.com/kyma-incubator/terraform-provider-kind).",
    "repository": "https://github.com/pulumi/pulumi-kind",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {},
    "types": {
        "kind:index/kind_clusterKindConfig:kind_clusterKindConfig": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "containerdConfigPatches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kind": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networking": {
                    "$ref": "#/types/kind:index/kind_clusterKindConfigNetworking:kind_clusterKindConfigNetworking",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kind:index/kind_clusterKindConfigNode:kind_clusterKindConfigNode"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "apiVersion",
                "kind"
            ]
        },
        "kind:index/kind_clusterKindConfigNetworking:kind_clusterKindConfigNetworking": {
            "properties": {
                "apiServerAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiServerPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disableDefaultCni": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipFamily": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeProxyMode": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "podSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceSubnet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kind:index/kind_clusterKindConfigNode:kind_clusterKindConfigNode": {
            "properties": {
                "extraMounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kind:index/kind_clusterKindConfigNodeExtraMount:kind_clusterKindConfigNodeExtraMount"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extraPortMappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/kind:index/kind_clusterKindConfigNodeExtraPortMapping:kind_clusterKindConfigNodeExtraPortMapping"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "image": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "kubeadmConfigPatches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kind:index/kind_clusterKindConfigNodeExtraMount:kind_clusterKindConfigNodeExtraMount": {
            "properties": {
                "containerPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "kind:index/kind_clusterKindConfigNodeExtraPortMapping:kind_clusterKindConfigNodeExtraPortMapping": {
            "properties": {
                "containerPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hostPort": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "listenAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the kind package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n"
    },
    "resources": {
        "kind:index/kind_cluster:kind_cluster": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "description": "Client certificate for authenticating to cluster.\n"
                },
                "clientKey": {
                    "type": "string",
                    "description": "Client key for authenticating to cluster.\n"
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "Client verifies the server certificate with this CA cert.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Kubernetes APIServer endpoint.\n"
                },
                "kindConfig": {
                    "$ref": "#/types/kind:index/kind_clusterKindConfig:kind_clusterKindConfig",
                    "description": "The kind_config that kind will use to bootstrap the cluster.\n"
                },
                "kubeconfig": {
                    "type": "string",
                    "description": "Kubeconfig set after the the cluster is created.\n"
                },
                "kubeconfigPath": {
                    "type": "string",
                    "description": "Kubeconfig path set after the the cluster is created or by the user to override defaults.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The kind name that is given to the created cluster.\n"
                },
                "nodeImage": {
                    "type": "string",
                    "description": "The node_image that kind will use (ex: kindest/node:v1.15.3).\n"
                },
                "waitForReady": {
                    "type": "boolean",
                    "description": "Defines wether or not the provider will wait for the control plane to be ready. Defaults to false\n"
                }
            },
            "required": [
                "clientCertificate",
                "clientKey",
                "clusterCaCertificate",
                "endpoint",
                "kubeconfig",
                "kubeconfigPath",
                "name",
                "nodeImage"
            ],
            "inputProperties": {
                "kindConfig": {
                    "$ref": "#/types/kind:index/kind_clusterKindConfig:kind_clusterKindConfig",
                    "description": "The kind_config that kind will use to bootstrap the cluster.\n"
                },
                "kubeconfigPath": {
                    "type": "string",
                    "description": "Kubeconfig path set after the the cluster is created or by the user to override defaults.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The kind name that is given to the created cluster.\n"
                },
                "nodeImage": {
                    "type": "string",
                    "description": "The node_image that kind will use (ex: kindest/node:v1.15.3).\n"
                },
                "waitForReady": {
                    "type": "boolean",
                    "description": "Defines wether or not the provider will wait for the control plane to be ready. Defaults to false\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering kind_cluster resources.\n",
                "properties": {
                    "clientCertificate": {
                        "type": "string",
                        "description": "Client certificate for authenticating to cluster.\n"
                    },
                    "clientKey": {
                        "type": "string",
                        "description": "Client key for authenticating to cluster.\n"
                    },
                    "clusterCaCertificate": {
                        "type": "string",
                        "description": "Client verifies the server certificate with this CA cert.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "Kubernetes APIServer endpoint.\n"
                    },
                    "kindConfig": {
                        "$ref": "#/types/kind:index/kind_clusterKindConfig:kind_clusterKindConfig",
                        "description": "The kind_config that kind will use to bootstrap the cluster.\n"
                    },
                    "kubeconfig": {
                        "type": "string",
                        "description": "Kubeconfig set after the the cluster is created.\n"
                    },
                    "kubeconfigPath": {
                        "type": "string",
                        "description": "Kubeconfig path set after the the cluster is created or by the user to override defaults.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The kind name that is given to the created cluster.\n"
                    },
                    "nodeImage": {
                        "type": "string",
                        "description": "The node_image that kind will use (ex: kindest/node:v1.15.3).\n"
                    },
                    "waitForReady": {
                        "type": "boolean",
                        "description": "Defines wether or not the provider will wait for the control plane to be ready. Defaults to false\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-kind/sdk/go/kind"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing kind cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/kyma-incubator/terraform-provider-kind)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-kind` repo](https://github.com/pulumi/pulumi-kind/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`kyma-incubator/terraform-provider-kind` repo](https://github.com/kyma-incubator/terraform-provider-kind/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/kyma-incubator/terraform-provider-kind)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-kind` repo](https://github.com/pulumi/pulumi-kind/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`kyma-incubator/terraform-provider-kind` repo](https://github.com/kyma-incubator/terraform-provider-kind/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}